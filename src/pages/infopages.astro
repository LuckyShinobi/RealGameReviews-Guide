---
import Layout from '../layouts/BlogPost.astro';
---

<Layout
	title="Info Page"
	description="Real Game Reviews & Guides"
	pubDate={new Date('June 19 2024')}
	heroImage="/blog-placeholder-about.jpg"
>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Azure Web App Guide</title>
</head>
<body>

### Step 1: Set Up Your Azure Account

1. **Sign Up**: If you don't already have an Azure account, sign up at the <a href="https://azure.microsoft.com/">Azure website</a>.
2. **Log In**: Log in to your Azure portal at <a href="https://portal.azure.com/">portal.azure.com</a>.

### Step 2: Create a New Web App

1. **Navigate to App Services**: In the Azure portal, click on the "Create a resource" button on the left sidebar.
2. **Search for Web App**: In the "Search the Marketplace" field, type "Web App" and select the option from the results.
3. **Create Web App**: Click on the "Create" button.

### Step 3: Configure Your Web App

1. **Subscription**: Choose the subscription you want to use.
2. **Resource Group**: Create a new resource group or select an existing one.
3. **Name**: Enter a unique name for your web app.
4. **Publish**: Select the code or Docker container.
5. **Runtime Stack**: Choose the runtime stack for your application (e.g., .NET, Java, Node.js, Python, PHP).
6. **Region**: Select the region closest to your users for optimal performance.
7. **Operating System**: Choose the operating system (Windows or Linux).
8. **Pricing Plan**: Choose a pricing plan based on your needs. The "Free" tier is good for testing.

### Step 4: Review and Create

1. **Review Configuration**: Review all the configurations you have made.
2. **Create**: Click on the "Create" button to create the web app.

### Step 5: Deploy Your Web App

#### Option A: Deploying from Local Git

1. **Set Up Deployment**: Navigate to your web app in the Azure portal and select "Deployment Center" from the left sidebar.
2. **Source**: Choose "Local Git" as your deployment source.
3. **Get Git Clone URL**: Copy the Git clone URL provided.
4. **Initialize Git Repository**: On your local machine, navigate to your project directory and initialize a Git repository if you haven't already.
    ```sh
    git init
    ```
5. **Add Remote**: Add the Azure remote repository.
    ```sh
    git remote add azure 'YOUR_GIT_CLONE_URL'
    ```
6. **Deploy**: Commit your changes and push to Azure.
    ```sh
    git add .
    git commit -m "Initial commit"
    git push azure master
    ```

#### Option B: Deploying from GitHub

1. **Set Up Deployment**: Navigate to your web app in the Azure portal and select "Deployment Center" from the left sidebar.
2. **Source**: Choose "GitHub" as your deployment source.
3. **Repository**: Select your GitHub repository and branch.
4. **Authorize**: Authorize Azure to access your GitHub account if prompted.
5. **Deploy**: Click "Save" to set up continuous deployment from your GitHub repository.

### Step 6: Configure Your Web App

1. **Application Settings**: Navigate to "Configuration" in the left sidebar of your web app.
2. **Add App Settings**: Add any necessary application settings, such as database connection strings, API keys, etc.
3. **Save**: Click "Save" to apply the changes.

### Step 7: Monitor and Scale Your Web App

1. **Monitor Performance**: Use the "Monitoring" section in the Azure portal to view application performance, logs, and metrics.
2. **Scale**: If needed, scale your web app by navigating to the "Scale up (App Service plan)" or "Scale out (App Service plan)" options in the left sidebar.

### Step 8: Access Your Web App

1. **Browse to Your App**: After deployment, you can access your web app using the URL provided in the Azure portal (e.g., `https://'YOUR_APP_NAME'.azurewebsites.net`).

### Additional Resources

- **Azure Documentation**: Refer to the <a href="https://docs.microsoft.com/en-us/azure/app-service/">Azure App Service documentation</a> for detailed information and advanced configurations.
- **Azure CLI**: Use the Azure CLI for command-line management of your web app.
- **Azure SDKs**: Integrate Azure services into your application using various SDKs provided by Azure.

</body>



</Layout>